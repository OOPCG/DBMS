// Step 0: Create (or switch to) the database
use MovieDatabase;

// Step 1: Create the "movies" collection and insert sample documents
db.movies.insertMany([
    {
        name: "Movie1",
        type: "action",
        budget: 1000000,
        producer: {
            name: "producer1",
            address: "PUNE"
        }
    },
    {
        name: "Movie2",
        type: "comedy",
        budget: 500000,
        producer: {
            name: "producer2",
            address: "MUMBAI"
        }
    },
    {
        name: "Movie3",
        type: "action",
        budget: 150000,
        producer: {
            name: "producer1",
            address: "PUNE"
        }
    }
]);

// Step 2: Run each query as specified

// i. Find the name of the movie having budget greater than 100,000
db.movies.find(
    { budget: { $gt: 100000 } },
    { name: 1, _id: 0 }
);

// ii. Find the name of the producer who lives in Pune
db.movies.find(
    { "producer.address": "PUNE" },
    { "producer.name": 1, _id: 0 }
);

// iii. Update the type of movie "action" to "horror"
db.movies.updateMany(
    { type: "action" },
    { $set: { type: "horror" } }
);

// iv. Find all the documents produced by name "producer1" with their address
db.movies.find(
    { "producer.name": "producer1" },
    { name: 1, "producer.address": 1, _id: 0 }
);

// v. Example query using an aggregate function
// Find the average budget of all movies
db.movies.aggregate([
    { $group: { _id: null, averageBudget: { $avg: "$budget" } } }
]);
