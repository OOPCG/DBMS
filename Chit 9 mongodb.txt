// Step 1: Connect to MongoDB (already done in terminal)

// Step 2: Use (or create) a database
use mydatabase;

// Step 3: Create the collection (optional)
db.createCollection("orderinfo");

// Step 4: Insert the document
use your_database_name   // Switch to your database (replace "your_database_name" with the actual name)

db.orderinfo.insertMany([
    {
        cust_id: 123,
        cust_name: "abc",
        status: "A",
        price: 250
    },
    {
        cust_id: 124,
        cust_name: "def",
        status: "B",
        price: 150
    },
    {
        cust_id: 125,
        cust_name: "ghi",
        status: "A",
        price: 300
    },
    {
        cust_id: 126,
        cust_name: "jkl",
        status: "C",
        price: 200
    },
    {
        cust_id: 127,
        cust_name: "mno",
        status: "A",
        price: 275
    },
    {
        cust_id: 128,
        cust_name: "pqr",
        status: "B",
        price: 350
    }
])


 

// Step 4: Find the average price for each customer with status 'A'
db.orderinfo.aggregate([
    { $match: { status: 'A' } },
    { $group: { 
        _id: "$cust_id", 
        averagePrice: { $avg: "$price" }
    }}
]);

// Step 5: Display the status of customers whose price lies between 100 and 1000
db.orderinfo.find(
    { price: { $gte: 100, $lte: 1000 } },
    { cust_id: 1, cust_name: 1, status: 1, _id: 0 }
);

// Step 6: Display customers' information without the `_id` field
db.orderinfo.find(
    {},  // Match all documents
    { _id: 0 }  // Exclude the _id field
);

// Step 7: Create a simple index on the `orderinfo` collection
db.orderinfo.createIndex({ price: 1 });



